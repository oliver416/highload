services:

  db:
    container_name: postgresql
    image: postgres:12.0-alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

  redis:
    container_name: redis
    image: redis:6-alpine
    restart: always
    ports:
      - 6379:6379

  kafka:
    container_name: kafka
    image: 'apache/kafka:latest'
    restart: always
    ports:
      - 9092:9092

#===============================ELK=============================================

  elasticsearch:
    image: elasticsearch:8.17.4
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - 9200:9200

  kibana:
    image: kibana:8.17.4
    container_name: kibana
    restart: always
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  logstash:
    image: logstash:8.17.4
    container_name: logstash
    restart: always
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock  # Читаем логи с контейнеров
    environment:
      - "XPACK_MONITORING_ENABLED=false"
    ports:
      #- "5044:5044"  # Для Filebeat (если понадобится)
      - "9600:9600"  # API Logstash
      - 12201:12201/udp
    depends_on:
      - elasticsearch

#===============================ELK=============================================

#===============================Metrics=========================================
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
    - "9080:8080"
    volumes:
    - "/:/rootfs:ro"
    - "/var/run:/var/run:rw"
    - "/sys:/sys:ro"
    #- "/var/lib/docker/:/var/lib/docker:ro"
    - "/var/snap/docker/common/var-lib-docker/:/var/snap/docker/common/var-lib-docker:ro"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

#===============================Metrics=========================================

  profile-service:
    container_name: profile-service 
    build: ./profile_service
    volumes: 
      - ./profile_service:/app
    ports:
      - 8080:8000
    depends_on:
      - db
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "profile-service"

  swipe-service:
    container_name: swipe-service 
    build: ./swipe_service
    volumes: 
      - ./swipe_service:/app
    ports:
      - 8081:8000
    depends_on:
      - db
      - kafka

  deck-service:
    container_name: deck-service 
    build: ./deck_service
    volumes: 
      - ./deck_service:/app
    depends_on:
      - db
      - redis

  notification-service:
    container_name: notification-service 
    build: ./notification_service
    volumes: 
      - ./notification_service:/app
    depends_on:
      - db
      - redis
      - kafka

